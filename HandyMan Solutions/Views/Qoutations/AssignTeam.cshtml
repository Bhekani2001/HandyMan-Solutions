@model HandyMan_Solutions.Models.Qoutation

@{
    ViewBag.Title = "Review Quotation";
}

<div class="d-flex justify-content-center mt-3">
    <div class="card" style="width: 80%; position: relative;">
        <div class="card-body">

            <h3 class="text-center">Assign Working Team for this Quotation Request</h3>
            <p class="lead text-center">Please review this quotation's details carefully before proceeding.</p>

            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "reviewForm" }))
            {
                <!-- Hidden field to hold the quotation ID -->
                @Html.HiddenFor(m => m.Id)

                <div class="row">
                    <div class="col-md-6 mb-3">
                        Customer
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-6 mb-3">
                        Address
                        @Html.TextBoxFor(m => m.UserAddress, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        Email
                        @Html.TextBoxFor(m => m.UserEmail, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-6 mb-3">
                        Contact
                        @Html.TextBoxFor(m => m.UserContact, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(m => m.Description)
                        @Html.TextBoxFor(m => m.Description, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(m => m.AdditionalNotes)
                        @Html.TextBoxFor(m => m.AdditionalNotes, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        Service
                        @Html.TextBoxFor(m => m.ServiceType, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(m => m.Status)
                        @Html.TextBoxFor(m => m.Status, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="d-flex justify-content-center mt-4">
                    <button type="button" id="assignBtn" class="btn btn-primary btn-sm" data-id="@Model.Id">
                        <i class="bi bi-person-check"></i> Assign
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function submitReviewForm(actionUrl, id) {
            Swal.fire({
                title: 'Are you sure you want to assign this quotation?',
                text: "This action will assign a working team to this quotation.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, assign',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: actionUrl,
                        type: "POST",
                        data: { qouteId: id },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Success!',
                                    text: response.message,
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    window.location.href = "@Url.Action("AllRequest", "Qoutations")";
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error!',
                                    text: response.message,
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: 'Error!',
                                text: 'An error occurred while processing your request.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                }
            });
        }

        $(document).ready(function () {
            $('#assignBtn').on('click', function () {
                const id = $(this).data('id');
                submitReviewForm('@Url.Action("Assign", "Qoutations")', id);
            });
        });
    </script>
}
