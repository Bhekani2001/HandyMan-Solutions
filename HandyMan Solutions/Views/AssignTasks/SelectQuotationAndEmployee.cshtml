@model HandyMan_Solutions.Models.SelectQuotationAndEmployeeViewModel

@{
    ViewBag.Title = "Select Quotation and Employee";
}

<div class="jumbotron my-4" style="background-color: #f8f9fa;">
    <h3 class="display-6 text-center"><i class="bi bi-clipboard-check"></i> Select Quotation and Employee</h3>
    <p class="lead text-center">Choose a quotation and assign an employee to it.</p>

    @using (Html.BeginForm("AssignEmployeeToQuotation", "AssignTasks", FormMethod.Post, new { id = "selectForm" }))
    {
        <div class="form-group mb-3">
            @Html.Label("Quotation", htmlAttributes: new { @class = "form-label" })
            @Html.DropDownList("quotationId",
                new SelectList(Model.Quotations, "Id", "Description"),
                "Select a quotation",
                new { @class = "form-control required", id = "quotationDropdown" })
        </div>

        <div class="form-group mb-4">
            @Html.Label("Employee", htmlAttributes: new { @class = "form-label" })
            @Html.DropDownList("employeeKey",
                new SelectList(Model.Employees, "EmployeeKey", "FullNameWithRole"),
                "Select an employee",
                new { @class = "form-control required", id = "employeeDropdown" })
        </div>

        <div class="d-flex justify-content-center">
            <button type="submit" id="assignBtn" class="btn btn-primary ">
                <i class="bi bi-person-check"></i> Process and Assign
            </button>
        </div>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $('#selectForm').submit(function (event) {
            event.preventDefault();
            var form = $(this);
            var formData = form.serialize();
            var actionUrl = form.attr('action');

            Swal.fire({
                title: 'Are you sure you want to assign this employee?',
                text: "This action will assign the selected employee to the selected quotation.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, assign',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: actionUrl,
                        type: "POST",
                        data: formData,
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Success!',
                                    text: response.message,
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    window.location.href = "@Url.Action("SelectQuotationAndEmployee", "AssignTasks")";
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error!',
                                    text: response.message,
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: 'Error!',
                                text: 'An error occurred while processing your request.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                }
            });
        });
    </script>
}
